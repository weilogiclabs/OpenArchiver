import{_ as o,c as t,o as i,ag as r}from"./chunks/framework.S-Qvb3wi.js";const d=JSON.parse('{"title":"Connecting to Google Workspace","description":"","frontmatter":{},"headers":[],"relativePath":"user-guides/email-providers/google-workspace.md","filePath":"user-guides/email-providers/google-workspace.md"}'),n={name:"user-guides/email-providers/google-workspace.md"};function a(s,e,l,c,u,g){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="connecting-to-google-workspace" tabindex="-1">Connecting to Google Workspace <a class="header-anchor" href="#connecting-to-google-workspace" aria-label="Permalink to &quot;Connecting to Google Workspace&quot;">​</a></h1><p>This guide provides instructions for Google Workspace administrators to set up a connection that allows the archiving of all user mailboxes within their organization.</p><p>The connection uses a <strong>Google Cloud Service Account</strong> with <strong>Domain-Wide Delegation</strong>. This is a secure method that grants the archiving service permission to access user data on behalf of the administrator, without requiring individual user passwords or consent.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>You must have <strong>Super Administrator</strong> privileges in your Google Workspace account.</li><li>You must have access to the <strong>Google Cloud Console</strong> associated with your organization.</li></ul><h2 id="setup-overview" tabindex="-1">Setup Overview <a class="header-anchor" href="#setup-overview" aria-label="Permalink to &quot;Setup Overview&quot;">​</a></h2><p>The setup process involves three main parts:</p><ol><li>Configuring the necessary permissions in the Google Cloud Console.</li><li>Authorizing the service account in the Google Workspace Admin Console.</li><li>Entering the generated credentials into the OpenArchiver application.</li></ol><hr><h3 id="part-1-google-cloud-console-setup" tabindex="-1">Part 1: Google Cloud Console Setup <a class="header-anchor" href="#part-1-google-cloud-console-setup" aria-label="Permalink to &quot;Part 1: Google Cloud Console Setup&quot;">​</a></h3><p>In this part, you will create a service account and enable the APIs it needs to function.</p><ol><li><p><strong>Create a Google Cloud Project:</strong></p><ul><li>Go to the <a href="https://console.cloud.google.com/" target="_blank" rel="noreferrer">Google Cloud Console</a>.</li><li>If you don&#39;t already have one, create a new project for the archiving service (e.g., &quot;Email Archiver&quot;).</li></ul></li><li><p><strong>Enable Required APIs:</strong></p><ul><li>In your selected project, navigate to the <strong>&quot;APIs &amp; Services&quot; &gt; &quot;Library&quot;</strong> section.</li><li>Search for and enable the following two APIs: <ul><li><strong>Gmail API</strong></li><li><strong>Admin SDK API</strong></li></ul></li></ul></li><li><p><strong>Create a Service Account:</strong></p><ul><li>Navigate to <strong>&quot;IAM &amp; Admin&quot; &gt; &quot;Service Accounts&quot;</strong>.</li><li>Click <strong>&quot;Create Service Account&quot;</strong>.</li><li>Give the service account a name (e.g., <code>email-archiver-service</code>) and a description.</li><li>Click <strong>&quot;Create and Continue&quot;</strong>. You do not need to grant this service account any roles on the project. Click <strong>&quot;Done&quot;</strong>.</li></ul></li><li><p><strong>Generate a JSON Key:</strong></p><ul><li>Find the service account you just created in the list.</li><li>Click the three-dot menu under <strong>&quot;Actions&quot;</strong> and select <strong>&quot;Manage keys&quot;</strong>.</li><li>Click <strong>&quot;Add Key&quot;</strong> &gt; <strong>&quot;Create new key&quot;</strong>.</li><li>Select <strong>JSON</strong> as the key type and click <strong>&quot;Create&quot;</strong>.</li><li>A JSON file will be downloaded to your computer. <strong>Keep this file secure, as it contains private credentials.</strong> You will need the contents of this file in Part 3.</li></ul></li></ol><h3 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h3><h4 id="error-iam-disableserviceaccountkeycreation" tabindex="-1">Error: &quot;iam.disableServiceAccountKeyCreation&quot; <a class="header-anchor" href="#error-iam-disableserviceaccountkeycreation" aria-label="Permalink to &quot;Error: &quot;iam.disableServiceAccountKeyCreation&quot;&quot;">​</a></h4><p>If you receive an error message stating <code>The organization policy constraint &#39;iam.disableServiceAccountKeyCreation&#39; is enforced</code> when trying to create a JSON key, it means your Google Cloud organization has a policy preventing the creation of new service account keys.</p><p>To resolve this, you must have <strong>Organization Administrator</strong> permissions.</p><ol><li><strong>Navigate to your Organization:</strong> In the Google Cloud Console, use the project selector at the top of the page to select your organization node (it usually has a building icon).</li><li><strong>Go to IAM:</strong> From the navigation menu, select <strong>&quot;IAM &amp; Admin&quot; &gt; &quot;IAM&quot;</strong>.</li><li><strong>Edit Your Permissions:</strong> Find your user account in the list and click the pencil icon to edit roles. Add the following two roles: <ul><li><code>Organization Policy Administrator</code></li><li><code>Organization Administrator</code><em>Note: These roles are only available at the organization level, not the project level.</em></li></ul></li><li><strong>Modify the Policy:</strong><ul><li>Navigate to <strong>&quot;IAM &amp; Admin&quot; &gt; &quot;Organization Policies&quot;</strong>.</li><li>In the filter box, search for the policy <strong>&quot;iam.disableServiceAccountKeyCreation&quot;</strong>.</li><li>Click on the policy to edit it.</li><li>You can either disable the policy entirely (if your security rules permit) or add a rule to exclude the specific project you are using for the archiver from this policy.</li></ul></li><li><strong>Retry Key Creation:</strong> Once the policy is updated, return to your project and you should be able to generate the JSON key as described in Part 1.</li></ol><hr><h3 id="part-2-grant-domain-wide-delegation" tabindex="-1">Part 2: Grant Domain-Wide Delegation <a class="header-anchor" href="#part-2-grant-domain-wide-delegation" aria-label="Permalink to &quot;Part 2: Grant Domain-Wide Delegation&quot;">​</a></h3><p>Now, you will authorize the service account you created to access data from your Google Workspace.</p><ol><li><p><strong>Get the Service Account&#39;s Client ID:</strong></p><ul><li>Go back to the list of service accounts in the Google Cloud Console.</li><li>Click on the service account you created.</li><li>Under the <strong>&quot;Details&quot;</strong> tab, find and copy the <strong>Unique ID</strong> (this is the Client ID).</li></ul></li><li><p><strong>Authorize the Client in Google Workspace:</strong></p><ul><li>Go to your <strong>Google Workspace Admin Console</strong> at <a href="https://admin.google.com" target="_blank" rel="noreferrer">admin.google.com</a>.</li><li>Navigate to <strong>Security &gt; Access and data control &gt; API controls</strong>.</li><li>Under the &quot;Domain-wide Delegation&quot; section, click <strong>&quot;Manage Domain-wide Delegation&quot;</strong>.</li><li>Click <strong>&quot;Add new&quot;</strong>.</li></ul></li><li><p><strong>Enter Client Details and Scopes:</strong></p><ul><li>In the <strong>Client ID</strong> field, paste the <strong>Unique ID</strong> you copied from the service account.</li><li>In the <strong>OAuth scopes</strong> field, paste the following two scopes exactly as they appear, separated by a comma:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.googleapis.com/auth/admin.directory.user.readonly,https://www.googleapis.com/auth/gmail.readonly</span></span></code></pre></div></li><li>Click <strong>&quot;Authorize&quot;</strong>.</li></ul></li></ol><p>The service account is now permitted to list users and read their email data across your domain.</p><hr><h3 id="part-3-connecting-in-openarchiver" tabindex="-1">Part 3: Connecting in OpenArchiver <a class="header-anchor" href="#part-3-connecting-in-openarchiver" aria-label="Permalink to &quot;Part 3: Connecting in OpenArchiver&quot;">​</a></h3><p>Finally, you will provide the generated credentials to the application.</p><ol><li><p><strong>Navigate to Ingestion Sources:</strong> From the main dashboard, go to the <strong>Ingestion Sources</strong> page.</p></li><li><p><strong>Create a New Source:</strong> Click the <strong>&quot;Create New&quot;</strong> button.</p></li><li><p><strong>Fill in the Configuration Details:</strong></p><ul><li><strong>Name:</strong> Give the source a name (e.g., &quot;Google Workspace Archive&quot;).</li><li><strong>Provider:</strong> Select <strong>&quot;Google Workspace&quot;</strong> from the dropdown.</li><li><strong>Service Account Key (JSON):</strong> Open the JSON file you downloaded in Part 1. Copy the entire content of the file and paste it into this text area.</li><li><strong>Impersonated Admin Email:</strong> Enter the email address of a Super Administrator in your Google Workspace (e.g., <code>admin@your-domain.com</code>). The service will use this user&#39;s authority to discover all other users.</li></ul></li><li><p><strong>Save Changes:</strong> Click <strong>&quot;Save changes&quot;</strong>.</p></li></ol><h2 id="what-happens-next" tabindex="-1">What Happens Next? <a class="header-anchor" href="#what-happens-next" aria-label="Permalink to &quot;What Happens Next?&quot;">​</a></h2><p>Once the connection is saved and verified, the system will begin the archiving process:</p><ol><li><strong>User Discovery:</strong> The service will first connect to the Admin SDK to get a list of all active users in your Google Workspace.</li><li><strong>Initial Import:</strong> The system will then start a background job to import the mailboxes of all discovered users. The status will show as <strong>&quot;Importing&quot;</strong>. This can take a significant amount of time depending on the number of users and the size of their mailboxes.</li><li><strong>Continuous Sync:</strong> After the initial import is complete, the status will change to <strong>&quot;Active&quot;</strong>. The system will then periodically check each user&#39;s mailbox for new emails and archive them automatically.</li></ol>',29)]))}const p=o(n,[["render",a]]);export{d as __pageData,p as default};
