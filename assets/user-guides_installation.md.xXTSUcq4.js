import{_ as t,c as a,o,ag as i}from"./chunks/framework.S-Qvb3wi.js";const u=JSON.parse('{"title":"Installation Guide","description":"","frontmatter":{},"headers":[],"relativePath":"user-guides/installation.md","filePath":"user-guides/installation.md"}'),s={name:"user-guides/installation.md"};function d(r,e,n,c,l,h){return o(),a("div",null,e[0]||(e[0]=[i(`<h1 id="installation-guide" tabindex="-1">Installation Guide <a class="header-anchor" href="#installation-guide" aria-label="Permalink to &quot;Installation Guide&quot;">​</a></h1><p>This guide will walk you through setting up Open Archiver using Docker Compose. This is the recommended method for deploying the application.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li><a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">Docker</a> and <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">Docker Compose</a> installed on your server or local machine.</li><li>A server or local machine with at least 4GB of RAM (2GB of RAM if you use external Postgres, Redis (Valkey) and Meilisearch instances).</li><li><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noreferrer">Git</a> installed on your server or local machine.</li></ul><h2 id="_1-clone-the-repository" tabindex="-1">1. Clone the Repository <a class="header-anchor" href="#_1-clone-the-repository" aria-label="Permalink to &quot;1. Clone the Repository&quot;">​</a></h2><p>First, clone the Open Archiver repository to your machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LogicLabs-OU/OpenArchiver.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OpenArchiver</span></span></code></pre></div><h2 id="_2-configure-your-environment" tabindex="-1">2. Configure Your Environment <a class="header-anchor" href="#_2-configure-your-environment" aria-label="Permalink to &quot;2. Configure Your Environment&quot;">​</a></h2><p>The application is configured using environment variables. You&#39;ll need to create a <code>.env</code> file to store your configuration.</p><p>Copy the example environment file for Docker:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.example.docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><p>Now, open the <code>.env</code> file in a text editor and customize the settings.</p><h3 id="important-configuration" tabindex="-1">Important Configuration <a class="header-anchor" href="#important-configuration" aria-label="Permalink to &quot;Important Configuration&quot;">​</a></h3><p>You must change the following placeholder values to secure your instance:</p><ul><li><code>POSTGRES_PASSWORD</code>: A strong, unique password for the database.</li><li><code>REDIS_PASSWORD</code>: A strong, unique password for the Valkey/Redis service.</li><li><code>MEILI_MASTER_KEY</code>: A complex key for Meilisearch.</li><li><code>JWT_SECRET</code>: A long, random string for signing authentication tokens.</li><li><code>ADMIN_PASSWORD</code>: A strong password for the initial admin user.</li><li><code>ENCRYPTION_KEY</code>: A 32-byte hex string for encrypting sensitive data in the database. You can generate one with the following command:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rand</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hex</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span></span></code></pre></div></li></ul><h3 id="storage-configuration" tabindex="-1">Storage Configuration <a class="header-anchor" href="#storage-configuration" aria-label="Permalink to &quot;Storage Configuration&quot;">​</a></h3><p>By default, the Docker Compose setup uses local filesystem storage, which is persisted using a Docker volume named <code>archiver-data</code>. This is suitable for most use cases.</p><p>If you want to use S3-compatible object storage, change the <code>STORAGE_TYPE</code> to <code>s3</code> and fill in your S3 credentials (<code>STORAGE_S3_*</code> variables). When <code>STORAGE_TYPE</code> is set to <code>local</code>, the S3-related variables are not required.</p><h3 id="using-external-services" tabindex="-1">Using External Services <a class="header-anchor" href="#using-external-services" aria-label="Permalink to &quot;Using External Services&quot;">​</a></h3><p>For convenience, the <code>docker-compose.yml</code> file includes services for PostgreSQL, Valkey (Redis), and Meilisearch. However, you can use your own external or managed instances for these services.</p><p>To do so:</p><ol><li><strong>Update your <code>.env</code> file</strong>: Change the host, port, and credential variables to point to your external service instances. For example, you would update <code>DATABASE_URL</code>, <code>REDIS_HOST</code>, and <code>MEILI_HOST</code>.</li><li><strong>Modify <code>docker-compose.yml</code></strong>: Remove or comment out the service definitions for <code>postgres</code>, <code>valkey</code>, and <code>meilisearch</code> from your <code>docker-compose.yml</code> file.</li></ol><p>This will configure the Open Archiver application to connect to your services instead of starting the default ones.</p><h3 id="environment-variable-reference" tabindex="-1">Environment Variable Reference <a class="header-anchor" href="#environment-variable-reference" aria-label="Permalink to &quot;Environment Variable Reference&quot;">​</a></h3><p>Here is a complete list of environment variables available for configuration:</p><h4 id="application-settings" tabindex="-1">Application Settings <a class="header-anchor" href="#application-settings" aria-label="Permalink to &quot;Application Settings&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>NODE_ENV</code></td><td>The application environment.</td><td><code>development</code></td></tr><tr><td><code>PORT_BACKEND</code></td><td>The port for the backend service.</td><td><code>4000</code></td></tr><tr><td><code>PORT_FRONTEND</code></td><td>The port for the frontend service.</td><td><code>3000</code></td></tr></tbody></table><h4 id="docker-compose-service-configuration" tabindex="-1">Docker Compose Service Configuration <a class="header-anchor" href="#docker-compose-service-configuration" aria-label="Permalink to &quot;Docker Compose Service Configuration&quot;">​</a></h4><p>These variables are used by <code>docker-compose.yml</code> to configure the services.</p><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>POSTGRES_DB</code></td><td>The name of the PostgreSQL database.</td><td><code>open_archive</code></td></tr><tr><td><code>POSTGRES_USER</code></td><td>The username for the PostgreSQL database.</td><td><code>admin</code></td></tr><tr><td><code>POSTGRES_PASSWORD</code></td><td>The password for the PostgreSQL database.</td><td><code>password</code></td></tr><tr><td><code>DATABASE_URL</code></td><td>The connection URL for the PostgreSQL database.</td><td><code>postgresql://admin:password@postgres:5432/open_archive</code></td></tr><tr><td><code>MEILI_MASTER_KEY</code></td><td>The master key for Meilisearch.</td><td><code>aSampleMasterKey</code></td></tr><tr><td><code>MEILI_HOST</code></td><td>The host for the Meilisearch service.</td><td><code>http://meilisearch:7700</code></td></tr><tr><td><code>REDIS_HOST</code></td><td>The host for the Valkey (Redis) service.</td><td><code>valkey</code></td></tr><tr><td><code>REDIS_PORT</code></td><td>The port for the Valkey (Redis) service.</td><td><code>6379</code></td></tr><tr><td><code>REDIS_PASSWORD</code></td><td>The password for the Valkey (Redis) service.</td><td><code>defaultredispassword</code></td></tr><tr><td><code>REDIS_TLS_ENABLED</code></td><td>Enable or disable TLS for Redis.</td><td><code>false</code></td></tr></tbody></table><h4 id="storage-settings" tabindex="-1">Storage Settings <a class="header-anchor" href="#storage-settings" aria-label="Permalink to &quot;Storage Settings&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>STORAGE_TYPE</code></td><td>The storage backend to use (<code>local</code> or <code>s3</code>).</td><td><code>local</code></td></tr><tr><td><code>STORAGE_LOCAL_ROOT_PATH</code></td><td>The root path for local file storage.</td><td><code>/var/data/open-archiver</code></td></tr><tr><td><code>STORAGE_S3_ENDPOINT</code></td><td>The endpoint for S3-compatible storage (required if <code>STORAGE_TYPE</code> is <code>s3</code>).</td><td></td></tr><tr><td><code>STORAGE_S3_BUCKET</code></td><td>The bucket name for S3-compatible storage (required if <code>STORAGE_TYPE</code> is <code>s3</code>).</td><td></td></tr><tr><td><code>STORAGE_S3_ACCESS_KEY_ID</code></td><td>The access key ID for S3-compatible storage (required if <code>STORAGE_TYPE</code> is <code>s3</code>).</td><td></td></tr><tr><td><code>STORAGE_S3_SECRET_ACCESS_KEY</code></td><td>The secret access key for S3-compatible storage (required if <code>STORAGE_TYPE</code> is <code>s3</code>).</td><td></td></tr><tr><td><code>STORAGE_S3_REGION</code></td><td>The region for S3-compatible storage (required if <code>STORAGE_TYPE</code> is <code>s3</code>).</td><td></td></tr><tr><td><code>STORAGE_S3_FORCE_PATH_STYLE</code></td><td>Force path-style addressing for S3 (optional).</td><td><code>false</code></td></tr></tbody></table><h4 id="security-authentication" tabindex="-1">Security &amp; Authentication <a class="header-anchor" href="#security-authentication" aria-label="Permalink to &quot;Security &amp; Authentication&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>JWT_SECRET</code></td><td>A secret key for signing JWT tokens.</td><td><code>a-very-secret-key-that-you-should-change</code></td></tr><tr><td><code>JWT_EXPIRES_IN</code></td><td>The expiration time for JWT tokens.</td><td><code>7d</code></td></tr><tr><td><code>ADMIN_EMAIL</code></td><td>The email for the initial admin user.</td><td><code>admin@local.com</code></td></tr><tr><td><code>ADMIN_PASSWORD</code></td><td>The password for the initial admin user.</td><td><code>a_strong_password_that_you_should_change</code></td></tr><tr><td><code>SUPER_API_KEY</code></td><td>An API key with super admin privileges.</td><td></td></tr><tr><td><code>ENCRYPTION_KEY</code></td><td>A 32-byte hex string for encrypting sensitive data.</td><td></td></tr></tbody></table><h2 id="_3-run-the-application" tabindex="-1">3. Run the Application <a class="header-anchor" href="#_3-run-the-application" aria-label="Permalink to &quot;3. Run the Application&quot;">​</a></h2><p>Once you have configured your <code>.env</code> file, you can start all the services using Docker Compose:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>This command will:</p><ul><li>Pull the required Docker images for the frontend, backend, database, and other services.</li><li>Create and start the containers in the background (<code>-d</code> flag).</li><li>Create the persistent volumes for your data.</li></ul><p>You can check the status of the running containers with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><h2 id="_4-access-the-application" tabindex="-1">4. Access the Application <a class="header-anchor" href="#_4-access-the-application" aria-label="Permalink to &quot;4. Access the Application&quot;">​</a></h2><p>Once the services are running, you can access the Open Archiver web interface by navigating to <code>http://localhost:3000</code> in your web browser.</p><p>You can log in with the <code>ADMIN_EMAIL</code> and <code>ADMIN_PASSWORD</code> you configured in your <code>.env</code> file.</p><h2 id="_5-next-steps" tabindex="-1">5. Next Steps <a class="header-anchor" href="#_5-next-steps" aria-label="Permalink to &quot;5. Next Steps&quot;">​</a></h2><p>After successfully deploying and logging into Open Archiver, the next step is to configure your ingestion sources to start archiving emails.</p><ul><li><a href="./email-providers/google-workspace.html">Connecting to Google Workspace</a></li><li><a href="./email-providers/microsoft-365.html">Connecting to Microsoft 365</a></li><li><a href="./email-providers/imap.html">Connecting to a Generic IMAP Server</a></li></ul><h2 id="updating-your-installation" tabindex="-1">Updating Your Installation <a class="header-anchor" href="#updating-your-installation" aria-label="Permalink to &quot;Updating Your Installation&quot;">​</a></h2><p>To update your Open Archiver instance to the latest version, run the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pull the latest changes from the repository</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pull the latest Docker images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart the services with the new images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div>`,50)]))}const g=t(s,[["render",d]]);export{u as __pageData,g as default};
